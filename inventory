<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Инвентаризация</title>
    <script src="https://telegram.org/js/telegram-web-app.js"></script>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            padding: 15px; 
            font-size: 16px; 
            line-height: 1.5; 
        }
        .step { display: none; }
        .active { display: block; }
        table { 
            width: 100%; 
            border-collapse: collapse; 
            margin-top: 10px; 
            font-size: 14px; 
            display: block; 
            overflow-x: auto; 
        }
        th, td { 
            border: 1px solid #ddd; 
            padding: 10px; 
            text-align: center; 
            white-space: nowrap; 
        }
        button { 
            margin: 10px 5px; 
            padding: 12px 20px; 
            cursor: pointer; 
            font-size: 16px; 
            min-height: 44px; 
            border: none; 
            border-radius: 4px; 
            -webkit-tap-highlight-color: transparent; 
        }
        .disabled { 
            background-color: gray; 
            color: white; 
            pointer-events: none; 
        }
        .enabled { 
            background-color: blue; 
            color: white; 
        }
        input, select { 
            margin: 5px; 
            padding: 10px; 
            font-size: 16px; 
            min-height: 44px; 
            width: 100%; 
            box-sizing: border-box; 
            border: 1px solid #ccc; 
            border-radius: 4px; 
        }
        label { 
            display: block; 
            margin-bottom: 15px; 
            font-weight: bold; 
        }
        .back-btn { 
            background-color: #6c757d; 
            color: white; 
            padding: 12px 20px; 
            border: none; 
            cursor: pointer; 
            margin-left: 10px; 
            min-height: 44px; 
        }
        .back-btn:hover { background-color: #545b62; }
        .button-row {
            display: flex;
            justify-content: flex-start;
            gap: 10px;
            margin-top: 15px;
            flex-wrap: wrap;
        }
        .submit-btn {
            background-color: blue; 
            color: white; 
        }
        .submit-btn:hover { background-color: darkblue; }
        @media (max-width: 600px) {
            body {
                padding: 10px;
                font-size: 18px;
            }
            button, input, select {
                font-size: 18px;
                min-height: 50px;
            }
            table {
                font-size: 16px;
            }
            th, td {
                padding: 12px;
            }
        }
        @media (prefers-color-scheme: dark) {
            body { color: white; }
        }
    </style>
</head>
<body>
    <div id="inventory-type-step" class="step active">
        <h2>Выберите тип остатка</h2>
        <select id="inventory-type-select">
            <option value="">Выберите...</option>
            <option value="крой">крой</option>
            <option value="на руках">на руках</option>
            <option value="готово к упаковке">готово к упаковке</option>
            <option value="упаковано">упаковано</option>
        </select>
        <button id="next-inventory" class="disabled">Далее</button>
    </div>

    <div id="inventory-step" class="step">
        <h2 id="inventory-title">Инвентаризация (...)</h2>
        <label>Дата инвентаризации: <input type="date" id="inventory-date"></label>
        <table id="inventory-table">
            <thead>
                <tr><th>Артикул</th><th>Цвет</th><th>Кол-во</th></tr>
            </thead>
            <tbody id="inventory-tbody"></tbody>
        </table>
        <button onclick="addRow('inventory')">Добавить строку</button>
        <button onclick="removeRow('inventory')">Удалить строку</button>
        <button class="back-btn">Назад</button>
        <div class="button-row">
            <button onclick="addInventoryType()">Добавить тип остатка</button>
            <button class="submit-btn" onclick="submitInventory()">Отправить отчет</button>
        </div>
    </div>

    <script>
        window.addEventListener('DOMContentLoaded', function() {
            const ARTIKULS = Array.from({length: 36}, (_, i) => `${(i+1).toString().padStart(2, '0')}/`);
            const FABRIC_COLORS = ["black", "white", "gray", "pink"];

            let currentStep = 'inventory-type-step';
            let data = { inventories: [] };
            let inventoryType = '';

            Telegram.WebApp.ready();

            function showStep(stepId) {
                document.querySelectorAll('.step').forEach(s => s.classList.remove('active'));
                document.getElementById(stepId).classList.add('active');
                currentStep = stepId;
            }

            document.addEventListener('click', function(event) {
                if (event.target.classList.contains('back-btn')) {
                    showStep('inventory-type-step');
                }
            });

            document.getElementById('inventory-type-select').addEventListener('change', function() {
                const btn = document.getElementById('next-inventory');
                btn.classList.toggle('disabled', !this.value);
                btn.classList.toggle('enabled', !!this.value);
            });

            document.getElementById('next-inventory').addEventListener('click', function() {
                inventoryType = document.getElementById('inventory-type-select').value;
                if (!inventoryType) return;
                data.inventory_type = inventoryType;
                showStep('inventory-step');
                document.getElementById('inventory-title').textContent = `Инвентаризация (${inventoryType})`;
                const tbody = document.getElementById('inventory-tbody');
                tbody.innerHTML = '';
                addRow('inventory');
            });

            function addRow(identifier) {
                if (identifier === 'inventory') {
                    const tbody = document.getElementById('inventory-tbody');
                    const row = document.createElement('tr');
                    // Артикул
                    const artikulCell = document.createElement('td');
                    const artikulSelect = document.createElement('select');
                    artikulSelect.innerHTML = '<option value="">Выберите...</option>';
                    ARTIKULS.forEach(a => {
                        const option = document.createElement('option');
                        option.value = a;
                        option.textContent = a;
                        artikulSelect.appendChild(option);
                    });
                    artikulCell.appendChild(artikulSelect);
                    row.appendChild(artikulCell);
                    // Цвет
                    const colorCell = document.createElement('td');
                    const colorSelect = document.createElement('select');
                    colorSelect.innerHTML = '<option value="">Выберите...</option>';
                    FABRIC_COLORS.forEach(c => {
                        const option = document.createElement('option');
                        option.value = c;
                        option.textContent = c;
                        colorSelect.appendChild(option);
                    });
                    colorCell.appendChild(colorSelect);
                    row.appendChild(colorCell);
                    // Кол-во
                    const qtyCell = document.createElement('td');
                    const qtyInput = document.createElement('input');
                    qtyInput.type = 'number';
                    qtyInput.placeholder = 'Кол-во';
                    qtyInput.min = '0';
                    qtyInput.inputMode = 'numeric';
                    qtyInput.enterKeyHint = 'done';
                    qtyCell.appendChild(qtyInput);
                    row.appendChild(qtyCell);
                    tbody.appendChild(row);
                }
            }

            function removeRow(identifier) {
                if (identifier === 'inventory') {
                    const tbody = document.getElementById('inventory-tbody');
                    if (tbody && tbody.lastElementChild) {
                        tbody.removeChild(tbody.lastElementChild);
                    }
                }
            }

            function addInventoryType() {
                const report = { inventory_type: data.inventory_type, date: document.getElementById('inventory-date').value, table: [] };
                const tbody = document.getElementById('inventory-tbody');
                const rows = tbody.querySelectorAll('tr');
                rows.forEach(row => {
                    const selects = row.querySelectorAll('select');
                    const artikul = selects[0].value;
                    const color = selects[1].value;
                    const qty = row.querySelector('input').value;
                    if (artikul && color && qty) {
                        report.table.push({ artikul: artikul, color: color, qty: qty });
                    }
                });
                data.inventories.push(report);
                data.inventory_type = null;
                document.getElementById('inventory-tbody').innerHTML = '';
                document.getElementById('inventory-date').value = '';
                showStep('inventory-type-step');
                document.getElementById('inventory-type-select').value = '';
                document.getElementById('next-inventory').classList.remove('enabled');
                document.getElementById('next-inventory').classList.add('disabled');
                alert('Тип остатка добавлен. Данные сохранены.');
            }

            function submitInventory() {
                if (data.inventory_type) {
                    const report = { inventory_type: data.inventory_type, date: document.getElementById('inventory-date').value, table: [] };
                    const tbody = document.getElementById('inventory-tbody');
                    const rows = tbody.querySelectorAll('tr');
                    rows.forEach(row => {
                        const selects = row.querySelectorAll('select');
                        const artikul = selects[0].value;
                        const color = selects[1].value;
                        const qty = row.querySelector('input').value;
                        if (artikul && color && qty) {
                            report.table.push({ artikul: artikul, color: color, qty: qty });
                        }
                    });
                    data.inventories.push(report);
                }
                Telegram.WebApp.sendData(JSON.stringify(data.inventories));
                Telegram.WebApp.close();
            }

            document.addEventListener('keydown', function(event) {
                if (event.key === 'Enter' && event.target.tagName === 'INPUT') {
                    event.target.blur();
                }
            });

            window.showStep = showStep;
            window.addRow = addRow;
            window.removeRow = removeRow;
            window.addInventoryType = addInventoryType;
            window.submitInventory = submitInventory;
        });
    </script>
</body>
</html>
